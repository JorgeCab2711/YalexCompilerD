(* Lexer para Gramática No. 4 *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']

let ws = delim+
let letter = ['A'-'Z''a'-'z']
let str = (_)*
let digit = ['0'-'4']
let digit2 = ['0'-'5']
let digits = digit+
let id = letter(letter|str|digit)*
let number = digits(.digits)?('E'['+''-']?digits)?

rule tokens = 
    ws
  | "IF"      { return IF }               (* Regla para la palabra reservada IF *)
  | "THEN"    { return THEN }             (* Regla para la palabra reservada THEN *)
  | "ELSE"    { return ELSE }             (* Regla para la palabra reservada ELSE *)
  | id        { return ID }               (* Cambie por una acción válida, que devuelva el token *)
  | number    { return NUMBER }
  | ';'       { return SEMICOLON }
  | ":="      { return ASSIGNOP }
  | '<'       { return LT }
  | '='       { return EQ }
  | '+'       { return PLUS }
  | '-'       { return MINUS }
  | '*'       { return TIMES }
  | '/'       { return DIV }
  | '('       { return LPAREN }
  | ')'       { return RPAREN }

(* Introducir cualquier trailer aqui *)
